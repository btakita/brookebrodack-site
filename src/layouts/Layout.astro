---
import { SITE } from '../config.js'
import '../styles/base.css'
const google_site_verification = import.meta.env.PUBLIC_GOOGLE_SITE_VERIFICATION
export interface Props {
	title?:string
	author?:string
	description?:string
	og_image?:string
	canonical_url?:string
}
const {
	title = SITE.title,
	author = SITE.author,
	description = SITE.description,
	og_image = SITE.og_image,
	canonical_url = new URL(Astro.url.pathname, Astro.site).href,
} = Astro.props
const social_image_url = new URL(
	og_image ?? SITE.og_image ?? 'og.png',
	Astro.url.origin
).href
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8"/>
		<meta name="viewport" content="width=device-width"/>
		<link rel="icon" type="image/svg+xml" href="/favicon.svg"/>
		<link rel="canonical" href={canonical_url}/>
		<meta name="generator" content={Astro.generator}/>
		<!-- General Meta Tags -->
		<title>{title}</title>
		<meta name="title" content={title}/>
		<meta name="description" content={description}/>
		<meta name="author" content={author}/>
		<link rel="sitemap" href="/sitemap-index.xml"/>
		<!-- Open Graph / Facebook -->
		<meta property="og:title" content={title}/>
		<meta property="og:description" content={description}/>
		<meta property="og:url" content={canonical_url}/>
		<meta property="og:image" content={social_image_url}/>
		<!-- Twitter -->
		<meta property="twitter:card" content="summary_large_image"/>
		<meta property="twitter:url" content={canonical_url}/>
		<meta property="twitter:title" content={title}/>
		<meta property="twitter:description" content={description}/>
		<meta property="twitter:image" content={social_image_url}/>
		<meta name="darkreader" content="disable">
		<!-- Google Font -->
		<link rel="preconnect" href="https://fonts.googleapis.com"/>
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin/>
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link
			href="https://fonts.googleapis.com/css2?family=Atkinson+Hyperlegible:ital,wght@0,400;0,700;1,400;1,700&family=JetBrains+Mono:wght@400;700&display=swap"
			rel="stylesheet">		<meta name="theme-color" content=""/>
		{
			// If PUBLIC_GOOGLE_SITE_VERIFICATION is set in the environment variable,
      // include google-site-verification tag in the heading
      // Learn more: https://support.google.com/webmasters/answer/9008080#meta_tag_verification&zippy=%2Chtml-tag
			google_site_verification && (
				<meta
					name="google-site-verification"
					content={google_site_verification}
				/>
			)
		}
		<script is:inline>
			// remove fouc
			const localStorage__theme = localStorage.getItem('theme')
			document.firstElementChild.setAttribute(
				'data-theme',
				localStorage__theme
					? localStorage__theme
					: window.matchMedia('(prefers-color-scheme: dark)').matches
						? 'dark'
						: 'light')
		</script>
		<script>
			window.va = window.va || function () { (window.vaq = window.vaq || []).push(arguments); };
		</script>
		<script defer src="/_vercel/insights/script.js"></script>
	</head>
	<body>
		<slot/>
	</body>
</html>

<script>
	import { browser__ctx__ensure } from '@btakita/domain--browser--brookebrodack'
	import { dom__bind, dom__onbind__validate } from '@ctx-core/dom'
	const ctx = browser__ctx__ensure()
	window.addEventListener('load', ()=>{
		queueMicrotask(()=>{
			dom__bind(ctx)
			dom__onbind__validate(ctx)
		})
	})
</script>
